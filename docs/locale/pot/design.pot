# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, Various
# This file is distributed under the same license as the Elgg package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Elgg 1.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-22 20:46-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../design/actions.rst:2
# 7059baac1778410ea972686b97288ca3
msgid "Actions"
msgstr ""

#: ../../design/actions.rst:4
# 015613c156c14a3c82b3273e8d3bcf99
msgid "Actions are the primary way users interact with an Elgg site."
msgstr ""

#: ../../design/actions.rst:10
#: ../../design/amd.rst:8
#: ../../design/database.rst:11
#: ../../design/events.rst:9
# c0379c32e57f44cab5201700f30d14ea
# ba44ed84fe86499f9b7aeccbce02e6f3
# 2a7f465680fe44fa824cb980d05b997c
# c6e66f1d169149c2917863bb1ebdb0ba
msgid "Overview"
msgstr ""

#: ../../design/actions.rst:12
# 8778b70564d149b1a6042b322ba3d404
msgid "An action in Elgg is the code that runs to make changes to the database when a user does something. For example, logging in, posting a comment, and making a blog post are actions. The action script processes input, makes the appropriate modifications to the database, and provides feedback to the user about the action."
msgstr ""

#: ../../design/actions.rst:15
# f0a71ccb607a4e0799198c658d72af06
msgid "Action Handler"
msgstr ""

#: ../../design/actions.rst:17
# 1d895efc5e3d494597ed9817db1cae3b
msgid "Actions are registered during the boot process by calling ``elgg_register_action()``. All actions URLs start with ``action/`` and are served by Elgg's front end controller through the action service. This approach is different from traditional PHP applications that send information to a specific file. The action service performs :doc:`CSRF security checks </design/security>`, and calls the registered action script file, then optionally forwards the user to a new page. By using the action service instead of a single script file, Elgg automatically provides increased security and extensibility."
msgstr ""

#: ../../design/actions.rst:19
# 77da12ee1aa844728f87320fe4ef2678
msgid "In Elgg 1.8 and before, actions were handled by an action handler script in ```engine/handlers/action_handler.php``. This required specific rewrite rules for URLs beginning with ``/action/``."
msgstr ""

#: ../../design/actions.rst:21
# 14a4554b05384ec9b52f52450c6df0ad
msgid "See :doc:`/guides/actions` for details on how to register and construct an action. To look at the core actions, check out the directory /actions."
msgstr ""

#: ../../design/amd.rst:2
# 9c9d17d981ff4ce5b626ff2c489b75f1
msgid "AMD"
msgstr ""

#: ../../design/amd.rst:10
# 8dd56a3ea60c4966ac2c1a312c66f028
msgid "There are two JavaScript system in Elgg: the deprecated 1.8 system, and the newer `AMD (Asynchronous Module Definition) <http://requirejs.org/docs/whyamd.html>`_ compatible system introduced in 1.9."
msgstr ""

#: ../../design/amd.rst:13
# 5d4175bb7bc64e06b01eed5a7b5754c1
msgid "This discusses the benefits of using AMD in Elgg."
msgstr ""

#: ../../design/amd.rst:16
# 47cdda0c2c66453fa4a6b9bcfc1c3e5b
msgid "Why AMD?"
msgstr ""

#: ../../design/amd.rst:18
# 8060d2cc17d1433d952a0be317ecd553
msgid "We have been working hard to make Elgg's JavaScript more maintainable and useful. We made some strides in 1.8 with the introduction of the \"``elgg``\" JavaScript object and library, but have quickly realized the approach we were taking was not scalable."
msgstr ""

#: ../../design/amd.rst:22
# e819a4421151484f9827a22508078f72
msgid "The size of `JS on the web is growing <http://httparchive.org/trends.php?s=All&minlabel=Feb+11+2011&maxlabel=Feb+1+2013#bytesJS&reqJS>`_ quickly, and JS in Elgg is growing too. We want Elgg to be able to offer a solution that makes JS development as productive and maintainable as possible going forward."
msgstr ""

#: ../../design/amd.rst:27
# 74f03a1ee57647b494651ada974d4175
msgid "The `reasons to choose AMD <http://requirejs.org/docs/whyamd.html>`_ are plenteous and well-documented. Let's highlight just a few of the most relevant reasons as they relate to Elgg specifically."
msgstr ""

#: ../../design/amd.rst:32
# 3d8821a6186348308651dd0fc124b06d
msgid "1. Simplified dependency management"
msgstr ""

#: ../../design/amd.rst:33
# a9b6c926ed164f8bb4ed23b8ee478238
msgid "AMD modules load asynchronously and execute as soon as their dependencies are available, so this eliminates the need to specify \"priority\" and \"location\" when registering JS libs in Elgg. Also, you don't need to worry about explicitly loading a module's dependencies in PHP. The AMD loader (RequireJS in this case) takes care of all that hassle for you. It's also possible have `text dependencies <http://requirejs.org/docs/api.html#text>`_ with the RequireJS text plugin, so client-side templating should be a breeze."
msgstr ""

#: ../../design/amd.rst:41
# cba1af9806c8454b8d48d738e9c912fe
msgid "2. AMD works in all browsers. Today."
msgstr ""

#: ../../design/amd.rst:42
# f21c02a7d45540a0b4ce060cfdd27405
msgid "Elgg developers are already writing lots of JavaScript. We know you want to write more. We cannot accept waiting 5-10 years for a native JS modules solution to be available in all browsers before we can organize our JavaScript in a maintainable way."
msgstr ""

#: ../../design/amd.rst:47
# 091e9baca804497f942c4c740c04cd1d
msgid "3. You do not need a build step to develop in AMD."
msgstr ""

#: ../../design/amd.rst:48
# 05ca18da125b4c6ab240673094f260cb
msgid "We like the edit-refresh cycle of web development. We wanted to make sure everyone developing in Elgg could continue experiencing that joy. Synchronous module formats like Closure or CommonJS just weren't an option for us. But even though AMD doesn't require a build step, *it is still very build-friendly*. Because of the ``define()`` wrapper, it's possible to concatenate multiple modules into a single file and ship them all at once in a production environment. [#]_"
msgstr ""

#: ../../design/amd.rst:54
# 267e0881c02543318ada81ffef9cf47c
msgid "AMD is a battle-tested and well thought out module loading system for the web today. We're very thankful for the work that has gone into it, and are excited to offer it as the standard solution for JavaScript development in Elgg starting with Elgg 1.9."
msgstr ""

#: ../../design/amd.rst:58
# aebb5f4b78b64955b726013a193bd02c
msgid "This is not currently supported by Elgg core, but we'll be looking into it since reducing round-trips is critical for a good first-view experience, especially on mobile devices."
msgstr ""

#: ../../design/database.rst:2
# 5e36bf7ec5314430a484cdea07b4aa95
msgid "Database"
msgstr ""

#: ../../design/database.rst:4
# a38321e61cb64905ad685d8f2c791923
msgid "A thorough discussion of Elgg's data model design and motivation."
msgstr ""

#: ../../design/database.rst:0
#: ../../design/events.rst:0
#: ../../design/security.rst:0
# e3b009c1fded48928b82dfd88076ef84
# 3d9e83013a254e09905d7f10f909c2c3
# b73b94cf7ba74bad8b605f2ca7ee1dd5
msgid "Contents"
msgstr ""

#: ../../design/database.rst:13
# f1ad2d527c5b469fa5e81f0ced1003e8
msgid "In Elgg, everything runs on a unified data model based on atomic units of data called entities."
msgstr ""

#: ../../design/database.rst:16
# 9d3f277a7a204017875054c2e9a4335b
msgid "Plugins are discouraged from interacting directly with the database, which creates a more stable system and a better user experience becase content created by different plugins can be mixed together in consistent ways. With this approach, plugins are faster to develop, and are at the same time much more powerful."
msgstr ""

#: ../../design/database.rst:22
# a2c77d516154404e9b86a67b947cd265
msgid "Every entity in the system inherits the ``ElggEntity`` class. This class controls access permissions, ownership"
msgstr ""

#: ../../design/database.rst:27
# 84cbe416b0624cf4a96fb1294dfd19e3
msgid "You can extend entities with extra information in two ways:"
msgstr ""

#: ../../design/database.rst:31
# b0b6b680a21b4abdaa0eefadfe5b67eb
msgid "``Metadata``: This is information describing the entity, usually"
msgstr ""

#: ../../design/database.rst:30
# 92030f424726419aaf59fae334094b57
msgid "added by the author of the entity when the entity is created. For example, tags, an ISBN number, a file location, or source language is metadata."
msgstr ""

#: ../../design/database.rst:36
# 7a39a1a93cc34efebf40dec74b9eec71
msgid "``Annotations``: This is information about the entity, usually"
msgstr ""

#: ../../design/database.rst:34
# 961c311379934ed0847964bbc12f96da
msgid "added by a third party after the entity is created. For example, ratings, likes, and votes are annotations. (Comments were before 1.9.)"
msgstr ""

#: ../../design/database.rst:39
# 6ba4fc465a0f4863bd22df54876c62d7
msgid "Datamodel"
msgstr ""

#: ../../design/database.rst:46
# c4fdc2a5ddcb44d78c796544b0462d70
msgid "The Elgg data model diagram"
msgstr ""

#: ../../design/database.rst:49
# 4f3ac778ded0494c92a33e463cfa969a
msgid "Entities"
msgstr ""

#: ../../design/database.rst:51
# 8deaa647f7474bc5a057b19636371716
msgid "ElggEntity is the base class for the Elgg data model."
msgstr ""

#: ../../design/database.rst:54
# b9c2263cc28d4e879f3202c20739965b
msgid "Users, Objects, Groups, Sites"
msgstr ""

#: ../../design/database.rst:56
# 3be12ed294484b559f67a7816302cc17
msgid "``ElggEntity`` has four main specializations, which provide extra properties and methods to more easily handle different kinds of data."
msgstr ""

#: ../../design/database.rst:59
# 3ea0e90cfbd3434da949a021653c6d61
msgid "``ElggObject``: content like blog posts, uploaded files and bookmarks ``ElggUser``: a system user ``ElggSite``: each Elgg site within an Elgg installation ``ElggGroup``: multi-user collaborative systems (called \"Communities\" in prior versions of Elgg)"
msgstr ""

#: ../../design/database.rst:65
# 6cd9622957784a9fae4d3b21f407c0e7
msgid "The benefit of such an approach is that, apart from modelling data with greater ease, a common set of functions is available to handle objects, regardless of their (sub)type."
msgstr ""

#: ../../design/database.rst:69
# d57421c0297e45abb80344a05fee894e
msgid "Each of these have their own properties that they bring to the table: ElggObjects have a title and description, ElggUsers have a username and password, and so on. However, because they all inherit ElggEntity, they each have a number of core properties and behaviours in common."
msgstr ""

#: ../../design/database.rst:74
# 96293d3f94ad4c0db0afdcab94a2ae5b
msgid "A numeric Globally Unique IDentifier (See `GUIDs`_)."
msgstr ""

#: ../../design/database.rst:75
# 03bde4e0061a4317b57f0342874b1274
msgid "Access permissions. (When a plugin requests data, it never gets to touch data that the current user doesn't have permission to see.)"
msgstr ""

#: ../../design/database.rst:77
# 5a0eac3bc7d1494faed1924b6138bda7
msgid "An arbitrary subtype. For example, a blog post is an ElggObject with a subtype of \"blog\". Subtypes aren't predefined; they can be any unique way to describe a particular kind of entity. \"blog\", \"forum\", \"foo\", \"bar\", \"loafofbread\" and \"pyjamas\" are all valid subtypes."
msgstr ""

#: ../../design/database.rst:81
# 4124a9b3f61747d3bce2f04a6dbc338f
msgid "An owner."
msgstr ""

#: ../../design/database.rst:82
# 813ece956ea44ec8afda121dbf06e792
msgid "The site that the entity belongs to."
msgstr ""

#: ../../design/database.rst:83
# 71839582831545678482614bdb661ea1
msgid "A container, usually used to associate a group's content with the group."
msgstr ""

#: ../../design/database.rst:86
# b2fc35effd584552a5e91238d5258554
msgid "GUIDs"
msgstr ""

#: ../../design/database.rst:88
# 164460a940ed471e9ca1b3e003d3af28
msgid "A GUID is an integer that uniquely identifies every entity in an Elgg installation (a Globally Unique IDentifier). It's assigned automatically when the entity is first saved and can never be changed."
msgstr ""

#: ../../design/database.rst:92
# ab7863d6df4b44919172048d55423c71
msgid "Some Elgg API functions work with GUIDs instead of ``ElggEntity`` objects."
msgstr ""

#: ../../design/database.rst:95
# a2c8f5be076e4ee4b7718587efa8f917
msgid "ElggObject"
msgstr ""

#: ../../design/database.rst:97
# 5478b52f55b94d5f84193d0af4f11a80
msgid "The ``ElggObject`` entity type represents arbitrary content within an Elgg install; things like blog posts, uploaded files, etc."
msgstr ""

#: ../../design/database.rst:100
# 84f63a8c3f0745f989ccb98a0c04c9df
msgid "Beyond the standard ElggEntity properties, ElggObjects also support:"
msgstr ""

#: ../../design/database.rst:102
# 0d69e6e4632f4452929e7860e6a8fa3a
msgid "``title`` The title of the object (HTML escaped text)"
msgstr ""

#: ../../design/database.rst:103
# bd7916cd2665405d976dc852602ea590
msgid "``description`` A description of the object (HTML)"
msgstr ""

#: ../../design/database.rst:105
# 4c3e003e72a04e11a05d1baba2cba3a3
msgid "Most other data about the object is generally stored via metadata."
msgstr ""

#: ../../design/database.rst:108
# dfe519dcdb354386a47bc3f7ca46a2d2
msgid "ElggUser"
msgstr ""

#: ../../design/database.rst:110
# af1fc3c1b61d421cb7f1016c6e99b50d
msgid "The ``ElggUser`` entity type represents users within an Elgg install. These will be set to disabled until their accounts have been activated (unless they were created from within the admin panel)."
msgstr ""

#: ../../design/database.rst:114
# 222e0ec6df3c48809482a73d437af470
msgid "Beyond the standard ElggEntity properties, ElggUsers also support:"
msgstr ""

#: ../../design/database.rst:116
# f1fddf5874754828bc5601f929590316
msgid "``name`` The user's plain text name. e.g. \"Hugh Jackman\""
msgstr ""

#: ../../design/database.rst:117
# 71c79455bbdd46cf9881387a8765248d
msgid "``username`` Their login name. E.g. \"hjackman\""
msgstr ""

#: ../../design/database.rst:118
# b3ff71e6c9954bdabd2487306e695ad1
msgid "``password`` A hashed version of their password"
msgstr ""

#: ../../design/database.rst:119
# c6df85b676474b85b748cf40fcf33c55
msgid "``salt`` The salt that their password has been hashed with"
msgstr ""

#: ../../design/database.rst:120
# 74685e5ba6274f31b11011938a814048
msgid "``email`` Their email address"
msgstr ""

#: ../../design/database.rst:121
# b910a0ae827a4d2d961f64b052f5c64a
msgid "``language`` Their default language code."
msgstr ""

#: ../../design/database.rst:122
# 9542a2cf3dbf489d86cc02f985ae5435
msgid "``code`` Their session code (moved to a separate table in 1.9)."
msgstr ""

#: ../../design/database.rst:123
# 1b633909339d4925b073cabc8b74e37e
msgid "``last_action`` The UNIX timestamp of the last time they loaded a page"
msgstr ""

#: ../../design/database.rst:124
# e97249c6558c4e0db069d18c58116e79
msgid "``prev_last_action`` The previous value of ``last_action``"
msgstr ""

#: ../../design/database.rst:125
# 885bc63013ba426293653e8cd636739c
msgid "``last_login`` The UNIX timestamp of their last log in"
msgstr ""

#: ../../design/database.rst:126
# 7f168cfaa73e4b31b9dcea4596539948
msgid "``prev_last_login`` the previous value of ``last_login``"
msgstr ""

#: ../../design/database.rst:129
# 47e46019a6254a05ac80f3852df1bbaf
msgid "ElggSite"
msgstr ""

#: ../../design/database.rst:131
# f14a47abeebb4a7880b1cfd81529b66d
msgid "The ``ElggSite`` entity type represents sites within your Elgg install. Most installs will have only one."
msgstr ""

#: ../../design/database.rst:134
# 89568cd5b768466da9926f0b255afec1
msgid "Beyond the standard ElggEntity properties, ElggSites also support:"
msgstr ""

#: ../../design/database.rst:136
# c73b9be3c4ed4789b0239de1f5457f82
msgid "``name`` The site name"
msgstr ""

#: ../../design/database.rst:137
# 516b08dd84254d6cab8cfb2aa7fb4613
msgid "``description`` A description of the site"
msgstr ""

#: ../../design/database.rst:138
# 115afb09e92b47918f314d453d402d8a
msgid "``url`` The address of the site"
msgstr ""

#: ../../design/database.rst:141
# 3647ab4a00d64d2f92cf8e615ac0d851
msgid "ElggGroup"
msgstr ""

#: ../../design/database.rst:143
# 7c5393de77e74b5a8abee1592e953ba8
msgid "The ``ElggGroup`` entity type represents an association of Elgg users. Users can join, leave, and post content to groups."
msgstr ""

#: ../../design/database.rst:146
# 8b3160459a864e8382c543a009db9fc6
msgid "Beyond the standard ElggEntity properties, ElggGroups also support:"
msgstr ""

#: ../../design/database.rst:148
# 869dbbc07b4249778c3220d329a359bd
msgid "``name`` The group's name (HTML escaped text)"
msgstr ""

#: ../../design/database.rst:149
# 73b607bdb20f49a8aefe3db9cadfe95f
msgid "``description`` A description of the group (HTML)"
msgstr ""

#: ../../design/database.rst:151
# cd481255462844578e90c99effe89fc7
msgid "``ElggGroup`` has addition methods to manage content and membership."
msgstr ""

#: ../../design/database.rst:154
# 70d333cbf27240cb92146ba8a7e3b61f
msgid "The Groups plugin"
msgstr ""

#: ../../design/database.rst:156
# b46702841de64c8480ba26d7defbadff
msgid "Not to be confused with the entity type ``ElggGroup``, Elgg comes with a plugin called \"Groups\" that provides a default UI/UX for site users to interact with groups. Each group is given a discussion forum and a profile page linking users to content within the group."
msgstr ""

#: ../../design/database.rst:161
# 37c80650870c4a7f99cec287c4944c70
msgid "You can alter the user experience via the traditional means of extending plugins or completely replace the Groups plugin with your own."
msgstr ""

#: ../../design/database.rst:164
# 780e2fd5f3a843429977ee9acfa5b478
msgid "Because ``ElggGroup`` can be subtyped like all other ElggEntities, you can have multiple types of groups running on the same site."
msgstr ""

#: ../../design/database.rst:168
# ff467244781e44bd971e755b0e153675
msgid "Writing a group-aware plugin"
msgstr ""

#: ../../design/database.rst:170
# 417fcdd367bb486ca0a8c5207b920991
msgid "Plugin owners need not worry too much about writing group-aware functionality, but there are a few key points:"
msgstr ""

#: ../../design/database.rst:174
# f07058a140e449908cd8fa6b77a6b3ba
msgid "Adding content"
msgstr ""

#: ../../design/database.rst:176
# 0a8a74eab3dc43ea9d387e0e78d8caa5
msgid "By passing along the group as ``container_guid`` via a hidden input field, you can use a single form and action to add both user and group content."
msgstr ""

#: ../../design/database.rst:179
# 9b1b851da5eb4e8d8eda1f402d5a86a1
msgid "Use `can_write_to_container <http://reference.elgg.org/entities_8php.html#16a972909c7cb75f646cb707be001a6f>`_ to determine whether or not the current user has the right to add content to a group."
msgstr ""

#: ../../design/database.rst:184
# db168224527b464f974c46ccc13abdf1
msgid "Be aware that you will then need to pass the container GUID or username to the page responsible for posting and the accompanying value, so that this can then be stored in your form as a hidden input field, for easy passing to your actions. Within a \"create\" action, you'll need to take in this input field and save it as a property of your new element (defaulting to the current user's container):"
msgstr ""

#: ../../design/database.rst:212
# c7cc2bf0017b43279dc23748b5bd58f6
msgid "Usernames and page ownership"
msgstr ""

#: ../../design/database.rst:214
# a7f04939500d4988a126bcf94a1ddc91
msgid "Groups have a simulated username of the form *group:\\ GUID*, which you can get the value of by checking ``$group->username``. If you pass this username to a page on the URL line as part of the ``username`` variable (i.e., ``/yourpage?username=group:nnn``), Elgg will automatically register that group as being the owner of the page (unless overridden)."
msgstr ""

#: ../../design/database.rst:221
# a6d0c38c51154380b4801f92d4d9d16f
msgid "Juggling users and groups"
msgstr ""

#: ../../design/database.rst:223
# 8937a1dd7c574b40b5e7bffdeec0181e
msgid "In fact, ``[[Engine/DataModel/Entities/ElggGroup|ElggGroup]]`` simulates most of the methods of ``[[Engine/DataModel/Entities/ElggUser|ElggUser]]``. You can grab the icon, name etc using the same calls, and if you ask for a group's friends, you'll get its members. This has been designed specifically for you to alternate between groups and users in your code easily."
msgstr ""

#: ../../design/database.rst:231
# 6baa434f45c442a1bdf6cc642171519e
msgid "Menu options"
msgstr ""

#: ../../design/database.rst:233
# c4e8287878c84759aa8f2321101f6055
msgid "***This section is deprecated as of Elgg 1.8***"
msgstr ""

#: ../../design/database.rst:235
# 723a1134a2a44ed7a87794f37b1c0dd8
msgid "The final piece of the puzzle, for default groups, is to add a link to your functionality from the group's profile. Here we'll use the file plugin as an example."
msgstr ""

#: ../../design/database.rst:239
# 7d3b0f2f69304da5a6049c72263c6741
msgid "This involves creating a view within your plugin - in this case file/menu - which will extend the group's menu. File/menu consists of a link within paragraph tags that points to the file repository of the page\\_owner():"
msgstr ""

#: ../../design/database.rst:252
# 3879109c22024912ad3809514caee197
msgid "You can then extend the group's menu view with this one, within your plugin's input function (in this case file\\_init):"
msgstr ""

#: ../../design/database.rst:260
# 2cfc1bae3acc4f209bd06438159c6a5b
msgid "Ownership"
msgstr ""

#: ../../design/database.rst:262
# 962b713f40cd44bf95b8e033370cc022
msgid "Entities have a ``owner_guid`` GUID property, which defines its owner. Typically this refers to the GUID of a user, although sites and users themselves often have no owner (a value of 0)."
msgstr ""

#: ../../design/database.rst:266
# 64d8c7e2a0fd4778acffbd915f4beda0
msgid "The ownership of an entity dictates, in part, whether or not you can access or edit that entity."
msgstr ""

#: ../../design/database.rst:270
# eaf587bffc6c4e3ea4dea26b30b62b14
msgid "Containers"
msgstr ""

#: ../../design/database.rst:272
# 551f72149b5b47a3b39723cf59575acf
msgid "In order to easily search content by group or by user, content is generally set to be \"contained\" by either the user who posted it, or the group to which the user posted. This means the new object's ``container_guid`` property will be set to the GUID of the current ElggUser or the target ElggGroup."
msgstr ""

#: ../../design/database.rst:277
# 6f5e7dc6161b4182a000c9be294c5d4a
msgid "E.g., three blog posts may be owned by different authors, but all be contained by the group they were posted to."
msgstr ""

#: ../../design/database.rst:280
# b1f31f9a21274ffdb435a5cbf547ee78
msgid "Note: This is not always true. Comment entities are contained by the object commented upon, and in some 3rd party plugins the container may be used to model a parent-child relationship between entities (e.g. a \"folder\" object containing a file object)."
msgstr ""

#: ../../design/database.rst:286
# e95dd53acf004a26a34b20ffbbd8fa2c
msgid "Annotations"
msgstr ""

#: ../../design/database.rst:288
# 621c7c51057045c8a2277171fa6cecf5
msgid "Annotations are pieces of data attached to an entity that allow users to leave ratings, or other relevant feedback. A poll plugin might register votes as annotations. Before Elgg 1.9, comments and group discussion replies were stored as annotations."
msgstr ""

#: ../../design/database.rst:293
# b3666b26b2ec4a61a233240cb0a46df5
msgid "Annotations are stored as instances of the ``ElggAnnotation`` class."
msgstr ""

#: ../../design/database.rst:295
# 076f84161cea45049d9b2f02276cd71c
msgid "Each annotation has:"
msgstr ""

#: ../../design/database.rst:297
# e1ff4d312c54404ea84d5be0b9cc4f23
msgid "An internal annotation type (like *comment*)"
msgstr ""

#: ../../design/database.rst:298
# 53840abe879144fcb666472597fb7b37
msgid "A value (which can be a string or integer)"
msgstr ""

#: ../../design/database.rst:299
# 36004d3ae21e49bdad777371d25b531a
msgid "An access permission distinct from the entity it's attached to"
msgstr ""

#: ../../design/database.rst:300
# e85c57b823b1453b855e6c173dfebd6a
msgid "An owner"
msgstr ""

#: ../../design/database.rst:303
# 18dd9f94f9b64080a90e0bd73c6268b0
msgid "Adding an annotation"
msgstr ""

#: ../../design/database.rst:305
# d185251ac1bd4970be608618fa6b6698
msgid "The easiest way to annotate is to use the ``annotate`` method on an entity, which is defined as:"
msgstr ""

#: ../../design/database.rst:318
# 9945cc01b6e44a0ebf6b3d55d316e7be
msgid "For example, to leave a rating on an entity, you might call:"
msgstr ""

#: ../../design/database.rst:325
# 5c24ce92ec154b01a0c211d67c8f567c
msgid "Reading annotations"
msgstr ""

#: ../../design/database.rst:327
# 22ed3491ae9443a9885c8d27b00158da
msgid "To retrieve annotations on an object, you can call the following method:"
msgstr ""

#: ../../design/database.rst:338
# 43f26e5040b4432f8946618bec155e7c
msgid "If your annotation type largely deals with integer values, a couple of useful mathematical functions are provided:"
msgstr ""

#: ../../design/database.rst:349
# 53b4763a05724fe9aae86c5177343439
msgid "Useful helper functions"
msgstr ""

#: ../../design/database.rst:352
# c3cd34e2c2c142bdb950812e5254e2f7
msgid "Comments"
msgstr ""

#: ../../design/database.rst:354
# 0f7595b782004b9fa9702025ca8e107a
msgid "If you want to provide comment functionality on your plugin objects, the following function will provide the full listing, form and actions:"
msgstr ""

#: ../../design/database.rst:363
# 17a24fab99474a06955cd2a43d0cdda6
msgid "Metadata"
msgstr ""

#: ../../design/database.rst:365
# b5f2e76b617949988b9b179f16941257
msgid "Metadata in Elgg allows you to store extra data on an ``entity`` beyond the built-in fields that entity supports. For example, ``ElggObjects`` only support the basic entity fields plus title and description, but you might want to include tags or an ISBN number. Similarly, you might want users to be able to save a date of birth."
msgstr ""

#: ../../design/database.rst:371
# e0c5d8937fb04399bfca994177b7eeed
msgid "Under the hood, metadata is stored as an instance of the ``ElggMetadata`` class, but you don't need to worry about that in practice (although if you're interested, see the ``ElggMetadata`` class reference). What you need to know is:"
msgstr ""

#: ../../design/database.rst:376
# a36306704f0446bbaf496d319fcbca2b
msgid "Metadata has an owner and access ID, both of which may be different to the owner of the entity it's attached to"
msgstr ""

#: ../../design/database.rst:378
# d2943416499949019e392885959e62da
msgid "You can potentially have multiple items of each type of metadata attached to a single entity"
msgstr ""

#: ../../design/database.rst:382
# 08ba336ffc074de0a23ff37fa8dbdd41
msgid "The simple case"
msgstr ""

#: ../../design/database.rst:385
#: ../../design/database.rst:454
# 0a2699fbde0f43188e3895c1419d0d73
# 79793dfab31846d3beb65d8b89c14e80
msgid "Adding metadata"
msgstr ""

#: ../../design/database.rst:387
# bab53b9a2a1741f09079369a870fb972
msgid "To add a piece of metadata to an entity, just call:"
msgstr ""

#: ../../design/database.rst:393
# 467dd47788a64568ac4fa99eeffc567c
msgid "For example, to add a date of birth to a user:"
msgstr ""

#: ../../design/database.rst:399
# 4d7051b529694dbbae74e5ab03151e29
msgid "Or to add a couple of tags to an object:"
msgstr ""

#: ../../design/database.rst:405
# d742703ba49c4962bd4232ec66e84a27
msgid "When adding metadata like this:"
msgstr ""

#: ../../design/database.rst:407
# ae519d276c454ff689ec8ec8d67e863c
msgid "The owner is set to the currently logged-in user"
msgstr ""

#: ../../design/database.rst:408
# 5d3e092f251d4509937f93a453912454
msgid "Access permissions are inherited from the entity"
msgstr ""

#: ../../design/database.rst:409
# 50f0f375d58642f2b13138be712a07c7
msgid "Reassigning a piece of metadata will overwrite the old value"
msgstr ""

#: ../../design/database.rst:411
# 4ea9e0bc7b0f4bce84d539fa1ddff63a
msgid "This is suitable for most purposes. Be careful to note which attributes are metadata and which are built in to the entity type that you are working with. You do not need to save an entity after adding or updating metadata. You do need to save an entity if you have changed one of its built in attributes. As an example, if you changed the access id of an ElggObject, you need to save it or the change isn't pushed to the database."
msgstr ""

#: ../../design/database.rst:420
#: ../../design/database.rst:496
# b777d5102e7444529bdd8991b0758483
# 0b0dbf4af5084ce8934967896ca5d13f
msgid "Reading metadata"
msgstr ""

#: ../../design/database.rst:422
# c74d46c918584bb9ab97f07db2e68e4c
msgid "To retrieve metadata, treat it as a property of the entity:"
msgstr ""

#: ../../design/database.rst:428
# 96e3518ee42e485f8c0c7a64e885ec6a
msgid "Note that this will return the absolute value of the metadata. To get metadata as an ElggMetadata object, you will need to use the methods described in the *finer control* section below."
msgstr ""

#: ../../design/database.rst:432
# 7bae9e3a6d6f45c9ae20ca1d6d51aa1d
msgid "If you stored multiple values in this piece of metadata (as in the \"tags\" example above), you will get an array of all those values back. If you stored only one value, you will get a string or integer back. Storing an array with only one value will return a string back to you. E.g."
msgstr ""

#: ../../design/database.rst:444
# 7bf3eeade76245e797ab3900349ee5b0
msgid "To always get an array back, simply cast to an array;"
msgstr ""

#: ../../design/database.rst:451
# 0003bc9ad1ed4879aad8f3c9e906e03b
msgid "Finer control"
msgstr ""

#: ../../design/database.rst:456
# 19a03d6674ca417390fc6281fd49964f
msgid "If you need more control, for example to assign an access ID other than the default, you can use the ``create_metadata`` function, which is defined as follows:"
msgstr ""

#: ../../design/database.rst:472
# b4862e090f7f4de0a251152847d8f3de
msgid "For single values, you can therefore write metadata as follows (taking the example of a date of birth attached to a user):"
msgstr ""

#: ../../design/database.rst:479
# 56c628d788f04ec4afe54c863f5bb6dd
msgid "For multiple values, you will need to iterate through and call ``create_metadata`` on each one. The following piece of code comes from the profile save action:"
msgstr ""

#: ../../design/database.rst:492
# d08df425da624615afceca092e42d43b
msgid "Note that the *allow multiple* setting is set to *false* in the first iteration and *true* thereafter."
msgstr ""

#: ../../design/database.rst:498
# 47eba3a7cd924eaf81193d6bd7523bbb
msgid "``elgg_get_metadata`` is the best function for retrieving metadata as ElggMetadata objects:"
msgstr ""

#: ../../design/database.rst:501
# 08a8700689994da39fb618de7d38cff8
msgid "E.g., to retrieve a user's DOB"
msgstr ""

#: ../../design/database.rst:510
# 0fdbd2f51a4040a7acaca9e560c0954e
msgid "Or to get all metadata objects:"
msgstr ""

#: ../../design/database.rst:522
# 5cb50278ece6400dbb2d9024c5923a64
msgid "Common mistakes"
msgstr ""

#: ../../design/database.rst:525
# 3f5c77b5dbe84347ba9481f36a7d2ccb
msgid "\"Appending\" metadata"
msgstr ""

#: ../../design/database.rst:527
# 793efc3801ca4ccea23f66320ff183f8
msgid "Note that you cannot \"append\" values to metadata arrays as if they were normal php arrays. For example, the following will not do what it looks like it should do."
msgstr ""

#: ../../design/database.rst:536
# 0ee86edad23e43178b1157ce75119b5e
msgid "Trying to store hashmaps"
msgstr ""

#: ../../design/database.rst:538
# bb7188af310945cb95933808802e42ca
msgid "Elgg does not support storing ordered maps (name/value pairs) in metadata. For example, the following does not work as you might first expect it to:"
msgstr ""

#: ../../design/database.rst:547
# bc13211f591e4768a9beb7a0acac0843
msgid "You can instead store the information like so:"
msgstr ""

#: ../../design/database.rst:556
# cdbc5115b66740c4808ab9889f171d6a
msgid "Storing GUIDs in metadata"
msgstr ""

#: ../../design/database.rst:558
# 7ede49259db044ada9f348f6f83689ed
msgid "Though there are some cases to store entity GUIDs in metadata, `Relationships`_ are a much better construct for relating entities to each other."
msgstr ""

#: ../../design/database.rst:563
# 93b4a970198141b38431f1017aaef192
msgid "Relationships"
msgstr ""

#: ../../design/database.rst:565
# c3e87916e63f457880aaf63781b2ca85
msgid "Relationships allow you to bind entities together. Examples: an artist has fans, a user is a member of an organization, etc."
msgstr ""

#: ../../design/database.rst:568
# 96f64841584748479efa0f904ed280d5
msgid "The class ``ElggRelationship`` models a directed relationship between two entities, making the statement:"
msgstr ""

#: ../../design/database.rst:571
# 567764e48b374efeb68625d11adb890c
msgid "\"**{subject}** is a **{noun}** of **{target}**.\""
msgstr ""

#: ../../design/database.rst:574
# 7d8c85162ea8431c838fe2140b7e5f3c
msgid "API name"
msgstr ""

#: ../../design/database.rst:574
# 2c43efb1220e4233aa3f51152fe0b660
msgid "Models"
msgstr ""

#: ../../design/database.rst:574
# 2d6cb0d3350d45ac95ab990195ba3abd
msgid "Represents"
msgstr ""

#: ../../design/database.rst:576
# ea9091905ca94727b82a4be4a9229d32
msgid "``guid_one``"
msgstr ""

#: ../../design/database.rst:576
# d7384ca7449341848605a682e7b5f08c
msgid "The subject"
msgstr ""

#: ../../design/database.rst:576
# 4f4447043066479c989dde14b3e65e51
msgid "Which entity is being bound"
msgstr ""

#: ../../design/database.rst:577
# 62f03a92f5064d69bf5dd21e4069bdb4
msgid "``relationship``"
msgstr ""

#: ../../design/database.rst:577
# 88ad951faacd46a1bd9baf0824c78d91
msgid "The noun"
msgstr ""

#: ../../design/database.rst:577
# cf01f9097f6745789beb9e0a28f383b8
msgid "The type of relationship"
msgstr ""

#: ../../design/database.rst:578
# 5f83c51217a6498faab6a3f9fedac5df
msgid "``guid_two``"
msgstr ""

#: ../../design/database.rst:578
# 762a2e0d9e95423385fb505f85bf3811
msgid "The target"
msgstr ""

#: ../../design/database.rst:578
# 236ce331decc4f3b8694705482b5f4e9
msgid "The entity to which the subject is bound"
msgstr ""

#: ../../design/database.rst:581
# 694a0a3abe6347e898fc978336b08606
msgid "The type of relationship may alternately be a verb, making the statement:"
msgstr ""

#: ../../design/database.rst:583
# 197254a936094e97a1d350398f92694a
msgid "\"**{subject}** **{verb}** **{target}**.\""
msgstr ""

#: ../../design/database.rst:585
# fae7af60a746478aaa6edb14778fe81e
msgid "E.g. User A \"likes\" blog post B"
msgstr ""

#: ../../design/database.rst:587
# 6ed6f0121e3349c0b0a5a88a1510869d
msgid "**Each relationship has direction.** Imagine an archer shoots an arrow at a target; The arrow moves in one direction, binding the subject (the archer) to the target."
msgstr ""

#: ../../design/database.rst:591
# 819d65a4f4ea4b6494043d42209124c9
msgid "**A relationship does not imply reciprocity**. **A** follows **B** does not imply that **B** follows **A**."
msgstr ""

#: ../../design/database.rst:594
# 72d5929acc184719816f26f3465ca48b
msgid "**Relationships_ do not have access control.** They're never hidden from view and can be edited with code at any privilege level, with the caveat that *the entities* in a relationship may be invisible due to access control!"
msgstr ""

#: ../../design/database.rst:600
# 7fd9fd9dfbed4026b1683a2e9fd978c8
msgid "Working with relationships"
msgstr ""

#: ../../design/database.rst:603
# e0991fc194364789b3964c1a527ef303
msgid "Creating a relationship"
msgstr ""

#: ../../design/database.rst:605
# 61bf61359bfa421c9e1acb7f5c0fd771
msgid "E.g. to establish that \"**$user** is a **fan** of **$artist**\" (user is the subject, artist is the target):"
msgstr ""

#: ../../design/database.rst:616
# b839a966166c4b3fbfd2db349d1335f9
msgid "This triggers the event [create, relationship], passing in the created ``ElggRelationship`` object. If a handler returns ``false``, the relationship will not be created and ``$success`` will be ``false``."
msgstr ""

#: ../../design/database.rst:622
# 95b33ca1f01241d6acc041e0bd5d7e57
msgid "Verifying a relationship"
msgstr ""

#: ../../design/database.rst:624
# b2fc5d14bc014d5791459aaefd0b711e
msgid "E.g. to verify that \"**$user** is a **fan** of **$artist**\":"
msgstr ""

#: ../../design/database.rst:632
# eb63c581037747e7b95e22533dad99e1
msgid "Note that, if the relationship exists, ``check_entity_relationship()`` returns an ``ElggRelationship`` object:"
msgstr ""

#: ../../design/database.rst:643
# b2f23719b421416a83b4c050f8defe25
msgid "Deleting a relationship"
msgstr ""

#: ../../design/database.rst:645
# 719eae2918614612b12c43ecc2e49f02
msgid "E.g. to be able to assert that \"**$user** is no longer a **fan** of **$artist**\":"
msgstr ""

#: ../../design/database.rst:651
# 636324e19db34dafa3f8bcf15c2e94cb
msgid "This triggers the event [delete, relationship], passing in the associated ``ElggRelationship`` object. If a handler returns ``false``, the relationship will remain, and ``$was_removed`` will be ``false``."
msgstr ""

#: ../../design/database.rst:656
# 681b2d5c1de643cd97d7e3e41a482fb5
msgid "Other useful functions:"
msgstr ""

#: ../../design/database.rst:658
# a274094bec2b46a191a4d23ce3943399
msgid "``delete_relationship()`` : delete by ID"
msgstr ""

#: ../../design/database.rst:659
# 218f9a3b522d4c34a8b181608201fd6c
msgid "``remove_entity_relationships()`` : delete those relating to an entity (*note:* in versions before Elgg 1.9, this did not trigger delete events)"
msgstr ""

#: ../../design/database.rst:662
# b2d94542f8764c7b94523e6bb396b27a
msgid "Finding relationships and related entities"
msgstr ""

#: ../../design/database.rst:664
# 53bb6337ff654a2f93adf49f88e2db15
msgid "Below are a few functions to fetch relationship objects and/or related entities. A few are listed below:"
msgstr ""

#: ../../design/database.rst:667
# 292d849877cf4efa89cab3622634f07e
msgid "``get_entity_relationships()`` : fetch relationships by subject or target entity"
msgstr ""

#: ../../design/database.rst:668
# 952936c05b4e45c49e2e06a7162a7c96
msgid "``get_relationship()`` : get a relationship object by ID"
msgstr ""

#: ../../design/database.rst:669
# d908c646f83f4884ac5ba82fe5faf725
msgid "``elgg_get_entities_from_relationship()`` : fetch entities in relationships in a variety of ways"
msgstr ""

#: ../../design/database.rst:672
# 4da933d84530437799f018a329335ca8
msgid "E.g. retrieving users who joined your site in January 2014."
msgstr ""

#: ../../design/database.rst:686
# 8c59917e90b14e8bbc1987694e30817a
msgid "Access Control"
msgstr ""

#: ../../design/database.rst:688
# ae7d774a75ac4c54b59873871c5ea52f
msgid "Granular access controls are one of the fundamental design principles in Elgg, and a feature that has been at the centre of the system throughout its development. The idea is simple: a user should have full control over who sees an item of data he or she creates."
msgstr ""

#: ../../design/database.rst:694
# 479374692ac6440eab65759f413bdd49
msgid "Access controls in the data model"
msgstr ""

#: ../../design/database.rst:696
# f7b9a7a906d142fa9426df6d45e8209a
msgid "In order to achieve this, every entity, annotation and piece of metadata contains an ``access_id`` property, which in turn corresponds to one of the pre-defined access controls or an entry in the ``access_collections`` database table."
msgstr ""

#: ../../design/database.rst:702
# e4060574d34e4d5f9514bb2573f83b03
msgid "Pre-defined access controls"
msgstr ""

#: ../../design/database.rst:704
# 268e217925294aefa27e54bd0deeb82d
msgid "**0** Private."
msgstr ""

#: ../../design/database.rst:705
# 3a8021fcad95404293443319d3faea43
msgid "**1** Logged in users."
msgstr ""

#: ../../design/database.rst:706
# 5d716ac18bf94787b32ed6dd7f42672f
msgid "**2** Public data."
msgstr ""

#: ../../design/database.rst:709
# 00938f7041914c42bb31dd0644252299
msgid "User defined access controls"
msgstr ""

#: ../../design/database.rst:711
# 5d2f3088cfa64b37b0466926d69a0d5a
msgid "You may define additional access groups and assign them to an entity, annotation or metadata. A number of functions have been defined to assist you; see the `access library reference`_ for more information."
msgstr ""

#: ../../design/database.rst:716
# 7a125ebf02314e26bece837f93f2f95c
msgid "How access affects data retrieval"
msgstr ""

#: ../../design/database.rst:718
# ea442db70cbe461982e8819402e0d4b0
msgid "All data retrieval functions above the database layer - for example ``get_entities`` and its cousins - will only return items that the current user has access to see. It is not possible to retrieve items that the current user does not have access to. This makes it very hard to create a security hole for retrieval."
msgstr ""

#: ../../design/database.rst:727
# 10882e759ef34cb2b26b321a37c9ad94
msgid "Write access"
msgstr ""

#: ../../design/database.rst:729
# 41d4e0f842f04b6a84f5a05e9f754059
msgid "The following rules govern write access:"
msgstr ""

#: ../../design/database.rst:731
# 89b30022f94449578976027ddbd004ce
msgid "The owner of an entity can always edit it"
msgstr ""

#: ../../design/database.rst:732
# 42dd24ebe592424b945fd1cb9d3bf152
msgid "The owner of a container can edit anything therein (note that this does not mean that the owner of a group can edit anything therein)"
msgstr ""

#: ../../design/database.rst:734
# 9fd7113dcf964f998e84a29e9f4c5682
msgid "Admins can edit anything"
msgstr ""

#: ../../design/database.rst:736
# 2b22ec89a18a43c7b764a5d0ff4c90cf
msgid "You can override this behaviour using a :ref:`plugin hook <design/events#plugin-hooks>` called ``permissions_check``, which passes the entity in question to any function that has announced it wants to be referenced. Returning ``true`` will allow write access; returning ``false`` will deny it. See :ref:`the plugin hook reference for permissions\\_check <guides/hooks-list#permission-hooks>` for more details."
msgstr ""

#: ../../design/database.rst:744
# 8f092b94141f4815a1b6b6280de2472f
msgid "`Access library reference`_"
msgstr ""

#: ../../design/database.rst:749
# fd57b601397b48f7bdeca0ed1a410075
msgid "Schema"
msgstr ""

#: ../../design/database.rst:751
# b38bbc58187148c080cc14c8fb81d780
msgid "The database contains a number of primary tables and secondary tables. Its schema table is stored in ``/engine/schema/mysql.sql``."
msgstr ""

#: ../../design/database.rst:754
# bdb4e6590b9b471bbd07a85975ac1017
msgid "Each table is prefixed by \"prefix\\_\", this is replaced by the Elgg framework during installation."
msgstr ""

#: ../../design/database.rst:758
# 58a7d517c9b54fd18eb05b330566fb8b
msgid "Main tables"
msgstr ""

#: ../../design/database.rst:760
# ab9adc5db000447f9e8cf4cfedd2c9ab
msgid "This is a description of the main tables. Keep in mind that in a given Elgg installation, the tables will have a prefix (typically \"elgg\\_\")."
msgstr ""

#: ../../design/database.rst:764
# 367e7aaad2704d979b2756f266d5fb3c
msgid "Table: entities"
msgstr ""

#: ../../design/database.rst:766
# 9d7291890fb54012ab6c9441654f59f6
msgid "This is the main `Entities`_ table containing Elgg users, sites, objects and groups. When you first install Elgg this is automatically populated with your first site."
msgstr ""

#: ../../design/database.rst:770
# 62f48a976e3546b0926c43d262526ad8
msgid "It contains the following fields:"
msgstr ""

#: ../../design/database.rst:772
# 77405ee7fb6a401c9ed9e17683eb2f8b
msgid "**guid** An auto-incrementing counter producing a GUID that uniquely identifies this entity in the system."
msgstr ""

#: ../../design/database.rst:774
# 5b9dbf364f6e4cd7a8d3908ff4279e78
msgid "**type** The type of entity - object, user, group or site"
msgstr ""

#: ../../design/database.rst:775
# 08e91ba9a31a4ea2a16a01bc5754c590
msgid "**subtype** A link to the `entity_subtypes` table."
msgstr ""

#: ../../design/database.rst:776
# 006e33e39d1342a5bb31126941c8254d
msgid "**owner\\_guid** The GUID of the owner's entity."
msgstr ""

#: ../../design/database.rst:777
# 693f1dc5a1a44ee7b7687e49176c86be
msgid "**site\\_guid** The site the entity belongs to."
msgstr ""

#: ../../design/database.rst:778
# 569ffb181acd415aa80a2ebdd4f44810
msgid "**container\\_guid** The GUID this entity is contained by - either a user or a group."
msgstr ""

#: ../../design/database.rst:780
# d3c2498d43404d57827df11020668beb
msgid "**access\\_id** Access controls on this entity."
msgstr ""

#: ../../design/database.rst:781
# 6d503f9d857a4e9cb0620f97ff78e646
msgid "**time\\_created** Unix timestamp of when the entity is created."
msgstr ""

#: ../../design/database.rst:782
# f000c657b13743488a1f3f6e0fd04d9a
msgid "**time\\_updated** Unix timestamp of when the entity was updated."
msgstr ""

#: ../../design/database.rst:783
# 4018aa2e380d423c94c24cf0fe4d2cd0
msgid "**enabled** If this is 'yes' an entity is accessible, if 'no' the entity has been disabled (Elgg treats it as if it were deleted without actually removing it from the database)."
msgstr ""

#: ../../design/database.rst:788
# 3dcca74385524150883ff34af6cc084e
msgid "Table: entity\\_subtypes"
msgstr ""

#: ../../design/database.rst:790
# f77c43d5679f49cbb35c8990ed075c65
msgid "This table contains entity subtype information:"
msgstr ""

#: ../../design/database.rst:792
#: ../../design/database.rst:802
#: ../../design/database.rst:820
# 42470178a8f14a1393f43e909feb74b3
# 81221acd4a2b4b96931a945a59a29057
# afc83f15025247f38bcde34bcc11e17d
msgid "**id** A counter."
msgstr ""

#: ../../design/database.rst:793
# 40b5c96a88464d9aac5725bc6aaf32c4
msgid "**type** The type of entity - object, user, group or site."
msgstr ""

#: ../../design/database.rst:794
# dc505743768247a8a75c2d4b1b2a880d
msgid "**subtype** The subtype name as a string."
msgstr ""

#: ../../design/database.rst:795
# 2f54a37a39f24598acbfb192d8dde3e6
msgid "**class** Optional class name if this subtype is linked with a class"
msgstr ""

#: ../../design/database.rst:798
# 330c5797e3dc415386530ae075b90290
msgid "Table: metadata"
msgstr ""

#: ../../design/database.rst:800
# 1c3aedbc52454cd18efbeb222e9f35b7
msgid "This table contains `Metadata`_, extra information attached to an entity."
msgstr ""

#: ../../design/database.rst:803
#: ../../design/database.rst:821
# d84568addd5a444d920c98e2935936b4
# 7a798573aba14e60a85d773b9656bd4c
msgid "**entity\\_guid** The entity this is attached to."
msgstr ""

#: ../../design/database.rst:804
# 69347d6324fd489daabbce535ca39d88
msgid "**name\\_id** A link to the metastrings table defining the name table."
msgstr ""

#: ../../design/database.rst:806
#: ../../design/database.rst:824
# c9a5684e845e4f8ab77de98d0685de04
# 86f95d031f3d40b28a38343e697fe82d
msgid "**value\\_id** A link to the metastrings table defining the value."
msgstr ""

#: ../../design/database.rst:807
#: ../../design/database.rst:825
# 920bba257cff4cf494dcf819e7311dde
# f0903c9840ef4b6b8de49c9c94fcc7c4
msgid "**value\\_type** The value class, either text or an integer."
msgstr ""

#: ../../design/database.rst:808
#: ../../design/database.rst:826
# 5ab9698e38c44741b6ec1ea94d72cee9
# efeffef4acea4b288ad7230f458ffca1
msgid "**owner\\_guid** The owner GUID of the owner who set this item of metadata."
msgstr ""

#: ../../design/database.rst:810
#: ../../design/database.rst:828
# 1e7974b920a94b76812b766828cbc2e7
# ee1ed3ca1c854e269ab7c5ea4a50ebeb
msgid "**access\\_id** An Access controls on this item of metadata."
msgstr ""

#: ../../design/database.rst:811
#: ../../design/database.rst:829
# 52605c056c6e496b9fd1fcd20b866b64
# 36918ee255eb4b91ad91d1679c61ebd5
msgid "**time\\_created** Unix timestamp of when the metadata is created."
msgstr ""

#: ../../design/database.rst:812
#: ../../design/database.rst:830
# e9f5607f2ac8472fb89312e3374b1084
# 452be299b8f246448ceef21782335d8d
msgid "**enabled** If this is 'yes' an item is accessible, if 'no' the item has been deleted."
msgstr ""

#: ../../design/database.rst:816
# ed701c6148814305b0414c63d0264788
msgid "Table: annotations"
msgstr ""

#: ../../design/database.rst:818
# e8443e4b2e4c43fcada04736cc0ebb36
msgid "This table contains `Annotations`_, this is distinct from `Metadata`_."
msgstr ""

#: ../../design/database.rst:822
# b878557753b54696a982d4868eaacf14
msgid "**name\\_id** A link to the metastrings table defining the type of annotation."
msgstr ""

#: ../../design/database.rst:834
# 3ec38442a4b14942ba6f4ec1dea2debd
msgid "Table: relationships"
msgstr ""

#: ../../design/database.rst:836
# e4ae48a765614b7a97327c26b2ecd2a9
msgid "This table defines `Relationships`_, these link one entity with another."
msgstr ""

#: ../../design/database.rst:838
# 700c6c40cf21406087fd61b78bdb5d30
msgid "**guid\\_one** The GUID of the subject entity."
msgstr ""

#: ../../design/database.rst:839
# 6cc8ba27cbbf45e79d1f634626ffa928
msgid "**relationship** The type of the relationship."
msgstr ""

#: ../../design/database.rst:840
# 384b4e1bd63c4b028ead95d9e49e5e80
msgid "**guid\\_two** The GUID of the target entity."
msgstr ""

#: ../../design/database.rst:843
# 792b3e414e61439eb4044a6cfd925b99
msgid "Table: objects\\_entity"
msgstr ""

#: ../../design/database.rst:845
# e7280b886e7943e2a6ecae3edcb8f21c
msgid "Extra information specifically relating to objects. These are split in order to reduce load on the metadata table and make an obvious difference between attributes and metadata."
msgstr ""

#: ../../design/database.rst:850
# 517421626b00442f92af905c21be0ad9
msgid "Table: sites\\_entity"
msgstr ""

#: ../../design/database.rst:852
# e2bce48d67744ae3a2fb0a56662fd874
msgid "Extra information specifically relating to sites. These are split in order to reduce load on the metadata table and make an obvious difference between attributes and metadata."
msgstr ""

#: ../../design/database.rst:857
# 00aec7b362364ca1a8d7b51bc728b921
msgid "Table: users\\_entity"
msgstr ""

#: ../../design/database.rst:859
# c1c0cbdd4cae4befbedd2f2b7273a309
msgid "Extra information specifically relating to users. These are split in order to reduce load on the metadata table and make an obvious difference between attributes and metadata."
msgstr ""

#: ../../design/database.rst:864
# 2ec7737c0805466693aefc92bdbee0d9
msgid "Table: groups\\_entity"
msgstr ""

#: ../../design/database.rst:866
# ca455bd814b549d3858300e78618e5f2
msgid "Extra information specifically relating to groups. These are split in order to reduce load on the metadata table and make an obvious difference between attributes and metadata."
msgstr ""

#: ../../design/database.rst:871
# 3e31bf58d50d487784413c169a51e473
msgid "Table: metastrings"
msgstr ""

#: ../../design/database.rst:873
# 95d80245c61d4635b101b8b856520493
msgid "Metastrings contain the actual string of metadata which is linked to by the metadata and annotations tables."
msgstr ""

#: ../../design/database.rst:876
# 37ecc435568c427dab09a57c0c8a91fa
msgid "This is to avoid duplicating strings, saving space and making database lookups more efficient."
msgstr ""

#: ../../design/database.rst:879
# 1913aeaaf4734988868f757672cd9437
msgid "Core developers will place schema upgrades in ``/engine/schema/upgrades/*``."
msgstr ""

#: ../../design/events.rst:2
# 5fb5696ac29b4871b3a4bd8c147eca3d
msgid "Events and Plugin Hooks"
msgstr ""

#: ../../design/events.rst:11
# 7abf17ca22dc4daf8d558d23e9a8ef47
msgid "Elgg has an event system that can be used to replace or extend core functionality."
msgstr ""

#: ../../design/events.rst:14
# eb084659c9f1494a8894b733cb72787a
msgid "Plugins influence the system by creating handlers (`callables <http://php.net/manual/en/language.types.callable.php>`_ such as functions and methods) and registering them to handle two types of events: `Elgg Events`_ and `Plugin Hooks`_."
msgstr ""

#: ../../design/events.rst:18
# 2448e76b0af14037a2bec32d66dbb0ba
msgid "When an event is triggered, a set of handlers is executed in order of priority. Each handler is passed arguments and has a chance to influence the process. After execution, the \"trigger\" function returns a value based on the behavior of the handlers."
msgstr ""

#: ../../design/events.rst:24
# 68a0dc4d9f96441e8a3c36bfa2c8e752
msgid "Elgg Events vs. Plugin Hooks"
msgstr ""

#: ../../design/events.rst:26
# 9ccc25b2d34a48ad8689a2338beef31e
msgid "The main differences between `Elgg Events`_ and `Plugin Hooks`_ are:"
msgstr ""

#: ../../design/events.rst:28
# 153cda79a7fc4423a5bd7fa7d6b94136
msgid "Most Elgg events can be cancelled; unless the event is an \"after\" event, a handler that returns `false` can cancel the event, and no more handlers are called."
msgstr ""

#: ../../design/events.rst:31
# 9928c39993474ea3a9a1ec41e7d01efc
msgid "Plugin hooks cannot be cancelled; all handlers are always called."
msgstr ""

#: ../../design/events.rst:32
# cc3f4aaa6c5b4e39a2d58ac293c4dcea
msgid "Plugin hooks pass an arbitrary value through the handlers, giving each a chance to alter along the way."
msgstr ""

#: ../../design/events.rst:37
# d984b086288947e7a07cfadf52370e7d
msgid "Elgg Events"
msgstr ""

#: ../../design/events.rst:39
# 724493ec2aed4c2bb430f9308d744ce8
msgid "Elgg Events are triggered when an Elgg object is created, updated, or deleted; and at important milestones while the Elgg framework is loading. Examples: a blog post being created or a user logging in."
msgstr ""

#: ../../design/events.rst:43
# 2bbbc557d49b4d6c95d735b7442a9002
msgid "Unlike `Plugin Hooks`_, *most Elgg events can be cancelled*, halting the execution of the handlers, and possibly cancelling an some action in the Elgg core."
msgstr ""

#: ../../design/events.rst:47
# bae9e2a33d7544bd9e7689f521262bec
msgid "Each Elgg event has a name and an object type (system, user, object, relationship name, annotation, group) describing the type of object passed to the handlers."
msgstr ""

#: ../../design/events.rst:52
# bdf78bffac254b46b23b05b3e06fe66b
msgid "Before and After Events"
msgstr ""

#: ../../design/events.rst:54
# 7d24d1cfbeae4b6f9946c87b62e3a120
msgid "Some events are split into \"before\" and \"after\". This avoids confusion around the state of the system while in flux. E.g. Is the user logged in during the [login, user] event?"
msgstr ""

#: ../../design/events.rst:58
# 9dcfa69c3701482f97f5f7b4fbc4dd63
msgid "Before Events have names ending in \":before\" and are triggered before something happens. Like traditional events, handlers can cancel the event by returning `false`."
msgstr ""

#: ../../design/events.rst:62
# f47129895d9f4fc1bbacdf7137182b65
msgid "After Events, with names ending in \":after\", are triggered after something happens. Unlike traditional events, handlers *cannot* cancel these events; all handlers will always be called."
msgstr ""

#: ../../design/events.rst:66
# eaff8cb7a51a4b2ab8037a5e75565b33
msgid "Where before and after events are available, developers are encouraged to transition to them, though older events will be supported for backwards compatibility."
msgstr ""

#: ../../design/events.rst:71
# c8114e1e458344f3917c7b173be9c5a0
msgid "Elgg Event Handlers"
msgstr ""

#: ../../design/events.rst:73
# a11395b973824f39b9f490722611f14b
msgid "Elgg event handlers should have the following prototype:"
msgstr ""

#: ../../design/events.rst:88
# 83ab330986e34b3884b4d6bfa3d0dd8e
msgid "If the handler returns `false`, the event is cancelled, preventing execution of the other handlers. All other return values are ignored."
msgstr ""

#: ../../design/events.rst:92
# 153cddf29c7a419daabcf4c7e3062708
msgid "Register to handle an Elgg Event"
msgstr ""

#: ../../design/events.rst:94
# 667a0718987e4648930fb2ae75a493bc
msgid "Register your handler to an event using ``elgg_register_event_handler``:"
msgstr ""

#: ../../design/events.rst:100
#: ../../design/events.rst:147
#: ../../design/events.rst:202
#: ../../design/events.rst:230
# 70b67210bf2f459cb6c18e35d6e8ffa6
# 5de064b9fa05497aab0f6d0275bcc618
# 55730105ae6648c6ab3c790dccf12fab
# f552c45029454b64bde241e74f5fd592
msgid "Parameters:"
msgstr ""

#: ../../design/events.rst:102
#: ../../design/events.rst:149
# ae76caa0a6e94b949e7e67a25f3da62e
# fc54bbb2e42d4d928f19d3a78258be6c
msgid "**$event** The event name."
msgstr ""

#: ../../design/events.rst:103
# bc8ae465300d4029b28bb89825f0fa09
msgid "**$object_type** The object type (e.g. \"user\" or \"object\") or 'all' for all types on which the event is fired."
msgstr ""

#: ../../design/events.rst:105
#: ../../design/events.rst:206
# 3a1b980e95a246509866ea40e860c648
# c70cb5aad88a46a8a4461d03b446ab4d
msgid "**$handler** The callback of the handler function."
msgstr ""

#: ../../design/events.rst:106
#: ../../design/events.rst:207
# 6e9ca319991a4f52b73d52be290c19c1
# 23e2443dcf86409c83c772f2635010e7
msgid "**$priority** The priority - 0 is first and the default is 500."
msgstr ""

#: ../../design/events.rst:108
# 405404e34edd40c6902e80b5d0787243
msgid "**Object** here does not refer to an ``ElggObject`` but rather a string describing any object in the framework: system, user, object, relationship, annotation, group."
msgstr ""

#: ../../design/events.rst:111
#: ../../design/events.rst:212
# 8a50e6df9c394803817f8da14cd1035c
# 3c81e5b6337e4562a2a9c09a220f5d8f
msgid "Example:"
msgstr ""

#: ../../design/events.rst:121
# 3db26ae91a9d4e7fb9beafc552120bf9
msgid "Trigger an Elgg Event"
msgstr ""

#: ../../design/events.rst:123
# c572fe7dc57c4b95ab2fb0513a090728
msgid "You can trigger a custom Elgg event using ``elgg_trigger_event``:"
msgstr ""

#: ../../design/events.rst:133
# 22176e960d2c46ea96a00c82c46fe192
msgid "For events with ambiguous states, like logging in a user, you should use `Before and After Events`_ by calling ``elgg_trigger_before_event`` or ``elgg_trigger_after_event``. This makes it clear for the event handler what state to expect and which events can be cancelled."
msgstr ""

#: ../../design/events.rst:150
# 225d8c4206c5437da202da41632f1150
msgid "**$object_type** The object type (e.g. \"user\" or \"object\")."
msgstr ""

#: ../../design/events.rst:151
# ea72bcc2835c4152a419101a9646b48e
msgid "**$object** The object (e.g. an instance of ``ElggUser`` or ``ElggGroup``)"
msgstr ""

#: ../../design/events.rst:153
# f8fd1759d1964a1fad077579c712258a
msgid "The function will return ``false`` if any of the selected handlers returned ``false`` and the event is stoppable, otherwise it will return ``true``."
msgstr ""

#: ../../design/events.rst:159
# 450156e07fc94e68b6a92eb9e41831ba
msgid "Plugin Hooks"
msgstr ""

#: ../../design/events.rst:161
# 324fdacd18694aec8fdeb12a88429f1d
msgid "Plugin Hooks provide a way for plugins to collaboratively determine or alter a value. For example, to decide whether a user has permission to edit an entity or to add additional configuration options to a plugin."
msgstr ""

#: ../../design/events.rst:165
# df1d70bea01245a28e334ed42a8b8581
msgid "A plugin hook has a value passed into the trigger function, and each handler has an opportunity to alter the value before it's passed to the next handler. After the last handler has completed, the final value is returned by the trigger."
msgstr ""

#: ../../design/events.rst:171
# f7ad8e837c8d46a7927274dad541b8aa
msgid "Plugin Hook Handlers"
msgstr ""

#: ../../design/events.rst:173
# d3d77b4d6c354ab496396082826c336f
msgid "Plugin hook handlers should have the following prototype:"
msgstr ""

#: ../../design/events.rst:189
# 4ccbdd7c0c274c31a2d78497cf466904
msgid "If the handler returns no value (or `null` explicitly), the plugin hook value is not altered. Otherwise the return value becomes the new value of the plugin hook. It will then be passed to the next handler as `$value`."
msgstr ""

#: ../../design/events.rst:194
# d19a5cb69e184162b91160c58f596d08
msgid "Register to handle a Plugin Hook"
msgstr ""

#: ../../design/events.rst:196
# ab54fb94adb0404c90144790beff208c
msgid "Register your handler to a plugin hook using ``elgg_register_plugin_hook_handler``:"
msgstr ""

#: ../../design/events.rst:204
#: ../../design/events.rst:232
# 817df8cd6be24248a1e23edffb13b18d
# a610984d85d94da1ab8cce34587daf70
msgid "**$hook** The name of the plugin hook."
msgstr ""

#: ../../design/events.rst:205
#: ../../design/events.rst:233
# e2fef891a3b84dcbbb1e782268f6810e
# 857762940cd94452ae4ea3486c3fa48a
msgid "**$type** The type of the hook or 'all' for all types."
msgstr ""

#: ../../design/events.rst:209
# a80dd2eefa874d6690d7415f9150c6e9
msgid "**Type** can vary in meaning. It may mean an Elgg entity type or something specific to the plugin hook name."
msgstr ""

#: ../../design/events.rst:221
# cadd2c5bcf074588b535ffa6c4e8c31a
msgid "Trigger a Plugin Hook"
msgstr ""

#: ../../design/events.rst:223
# 10900ca935f74a989903dedcdd073a05
msgid "You can trigger a custom plugin hook using ``elgg_trigger_plugin_hook``:"
msgstr ""

#: ../../design/events.rst:234
# c8b255fbaff44820a6d2ffb9ed3deb34
msgid "**$params** Arbitrary data passed from the trigger to the handlers."
msgstr ""

#: ../../design/events.rst:235
# 6b3ced1971174ad2abe8969c19c18cf9
msgid "**$value** The initial value of the plugin hook."
msgstr ""

#: ../../design/events.rst:237
# 0df7d3f9658845519bd4e620f95d3400
msgid "The `$params` and `$value` arguments are reversed between the plugin hook handlers and trigger functions!"
msgstr ""

#: ../../design/i18n.rst:2
# d6d98dc1aa894cecbf48d80341549046
msgid "Internationalization"
msgstr ""

#: ../../design/i18n.rst:4
# 94a97a36f9a145de88b29172848dff00
msgid "Elgg 1.0+ departs from previous versions in that it uses a custom text array rather than gettext. This improves system performance and reliability of the translation system."
msgstr ""

#: ../../design/i18n.rst:7
# e01578ffca154c2aa98e5d4a62077f8a
msgid "TODO: more plz"
msgstr ""

#: ../../design/index.rst:2
# 0c231da8842d4c39903db5b5388bf5ef
msgid "Design Docs"
msgstr ""

#: ../../design/index.rst:4
# 0989063539da4594b70a9d385fe800c1
msgid "Gain a deep understanding of how Elgg works and why it's built the way it is."
msgstr ""

#: ../../design/loggable.rst:2
# 11b6e3fa1ffd4bbb97fd5fae67c9e51c
msgid "Loggable"
msgstr ""

#: ../../design/loggable.rst:4
# 402795d067df4e1ba9ae81daae98a258
msgid "Loggable is an interface inherited by any class that wants events relating to its member objects to be saved to the system log. ``ElggEntity`` and ``ElggExtender`` both inherit ``Loggable``."
msgstr ""

#: ../../design/loggable.rst:6
# bcd1a1d2000f4c40a1247180affa3c9f
msgid "Loggable defines several class methods that are used in saving to the default system log, and can be used to define your own (as well as for other purposes):"
msgstr ""

#: ../../design/loggable.rst:8
# a98744a51c914da797d6a5b8d74866a5
msgid "``getSystemLogID()`` Return a unique identifier for the object for storage in the system log. This is likely to be the object's GUID"
msgstr ""

#: ../../design/loggable.rst:9
# b3fbe366ee984c49b188ec9f6141a8a2
msgid "``getClassName()`` Return the class name of the object"
msgstr ""

#: ../../design/loggable.rst:10
# c3acd4acdb4e4b1c9e16c6d5425af5cc
msgid "``getType()`` Return the object type"
msgstr ""

#: ../../design/loggable.rst:11
# 9413ddf0144d47d79d55f94eae5da59c
msgid "``getSubtype()`` Get the object subtype"
msgstr ""

#: ../../design/loggable.rst:12
# fb0d5e3ec8804d0fa532daacc778c8a0
msgid "``getObjectFromID($id)`` For a given ID, return the object associated with it"
msgstr ""

#: ../../design/loggable.rst:13
# c1705fe50be04a7b94fedc041aec2788
msgid "``getObjectOwnerGUID()`` Return the GUID of the owner of this object"
msgstr ""

#: ../../design/loggable.rst:16
# b07d318288e04cc7934464beaf0575ee
msgid "Database details"
msgstr ""

#: ../../design/loggable.rst:18
# 0554ef8d433741ed8e9f729e58487834
msgid "The default system log is stored in the ``system_log`` :doc:`database table <database>`. It contains the following fields:"
msgstr ""

#: ../../design/loggable.rst:20
# 1efca3ba7e434850b032cc6b2c0bceb1
msgid "**id** - A unique numeric row ID"
msgstr ""

#: ../../design/loggable.rst:21
# 23459d368507430199428f30dd47e5c1
msgid "**object_id** - The GUID of the entity being acted upon"
msgstr ""

#: ../../design/loggable.rst:22
# 061cc74554c5439fab8cea35dd119738
msgid "**object_class** - The class of the entity being acted upon (eg ElggObject)"
msgstr ""

#: ../../design/loggable.rst:23
# dfe8fd5c4e0043499c307d07e32063a6
msgid "**object_type** - The type of the entity being acted upon (eg object)"
msgstr ""

#: ../../design/loggable.rst:24
# 8b8165c81c384a82b95fdb2292a16fcf
msgid "**object_subtype** - The subtype of the entity being acted upon (eg blog)"
msgstr ""

#: ../../design/loggable.rst:25
# 95aa19abfd8f429fbe332d3ebc18e602
msgid "**event** - The event being logged (eg create or update)"
msgstr ""

#: ../../design/loggable.rst:26
# a9bb4f9673ec415d92b398f83a014c11
msgid "**performed_by_guid** - The GUID of the acting entity (the user performing the action)"
msgstr ""

#: ../../design/loggable.rst:27
# 7a9cdf8234234edf80ebc1148d31a866
msgid "**owner_guid** - The GUID of the user which owns the entity being acted upon"
msgstr ""

#: ../../design/loggable.rst:28
# 8aad10f9f80142c4b52fd2fee20f0718
msgid "**access_id** - The access restriction associated with this log entry"
msgstr ""

#: ../../design/loggable.rst:29
# ebd561b808ce4608ba428b1eb2d2849c
msgid "**time_created** - The UNIX epoch timestamp of the time the event took place"
msgstr ""

#: ../../design/security.rst:2
# 9d646bbf3c5e43cd95e5ac85c9eb8103
msgid "Security"
msgstr ""

#: ../../design/security.rst:4
# dcb31f4111194910aa19b943ae25d125
msgid "Elgg’s approach to the various security issues common to all web applications."
msgstr ""

#: ../../design/security.rst:8
# 932dd0d164704fc6b5fbf07144909cc2
msgid "To report a potential vulnerability in Elgg, email security@elgg.org."
msgstr ""

#: ../../design/security.rst:15
# fbb400236ae24ce8b3cb275639ea3834
msgid "Passwords"
msgstr ""

#: ../../design/security.rst:18
# 432787218c804ef29150b75ffa083a68
msgid "Password validation"
msgstr ""

#: ../../design/security.rst:20
# 5f46554a3c9d4d7f9203c685e8be8064
msgid "The only restriction that Elgg places on a password is that it must be at least 6 characters long by default, though this may be changed in /engine/settings.php. Additional criteria can be added by a plugin by registering for the ``registeruser:validate:password`` plugin hook."
msgstr ""

#: ../../design/security.rst:23
# 1dc4790052594785b5749cc154f68b62
msgid "Password salting"
msgstr ""

#: ../../design/security.rst:27
# a085e3a057fe4cd19ecdb841841eda88
msgid "Elgg salts passwords with a unique 8 character random string. The salt is generated each time the password is set. The main security advantages of the salting are:"
msgstr ""

#: ../../design/security.rst:26
# 3c9da5652bf542378b23828855014c23
msgid "preventing anyone with access to the database from conducting a precomputed dictionary attack"
msgstr ""

#: ../../design/security.rst:27
# 3ef43b7f510545cd8cc5a3e7d13535ba
msgid "preventing a site administration from noting users with the same password."
msgstr ""

#: ../../design/security.rst:30
# 76dca058c16d4ee8a1ccd25fec7d2b43
msgid "Password hashing"
msgstr ""

#: ../../design/security.rst:32
# 86cf2e7bfadc4b13beeab755fc8353ed
msgid "The hashed password is computed using md5 from the user's password text and the salt."
msgstr ""

#: ../../design/security.rst:35
# 102666416ca948179d0e6f0c3692163a
msgid "Password storage"
msgstr ""

#: ../../design/security.rst:37
# 8f95ebe0c18841258c8cb84b215a1099
msgid "The hashed password and the salt are stored in the users table. Neither are stored in any cookies on a user's computer."
msgstr ""

#: ../../design/security.rst:40
# 54ed9cb645a64a9ea47f21617bb3a6ff
msgid "Password throttling"
msgstr ""

#: ../../design/security.rst:42
# b66d8272c0ba48d68d3ef3e52dd84566
msgid "Elgg has a password throttling mechanism to make dictionary attacks from the outside very difficult. A user is only allowed 5 login attempts over a 5 minute period."
msgstr ""

#: ../../design/security.rst:45
# b8ab242d5ef947979442c36cec66bef5
msgid "Password resetting"
msgstr ""

#: ../../design/security.rst:47
# f14401d21dc84b5a9a96939b48ac33e3
msgid "If a user forgets his password, a new random password can be requested. After the request, an email is sent with a unique URL. When the user visits that URL, a new random password is sent to the user through email."
msgstr ""

#: ../../design/security.rst:50
# 4601a1ee924a49e2ae93064a3e13be0d
msgid "Sessions"
msgstr ""

#: ../../design/security.rst:52
# 7390fd7159ac4596a7886584293dd9be
msgid "Elgg uses PHP's session handling with custom handlers. Session data is stored in the database. The session cookie contains the session id that links the user to the browser. The user's metadata is stored in the session including GUID, username, email address. The session's lifetime is controlled through the server's PHP configuration."
msgstr ""

#: ../../design/security.rst:55
# 68551b71a7644f568f14a1a2f2801c0b
msgid "Session fixation"
msgstr ""

#: ../../design/security.rst:56
# a077505a74cb4bb9b4a0e3b34bfe3bb6
msgid "Elgg protects against session fixation by regenerating the session id when a user logs in."
msgstr ""

#: ../../design/security.rst:59
# ee961793414342f7a61a94441e4d9b90
msgid "Session hijacking"
msgstr ""

#: ../../design/security.rst:60
# 620a93c5d9d141c5ba3ee625eb3fa95a
msgid "This section is questionable."
msgstr ""

#: ../../design/security.rst:62
# 60a75e3a682b4e09b418237a481764ec
msgid "Besides protecting against session fixation attacks, Elgg also has a further check to try to defeat session hijacking if the session identifier is compromised. Elgg stores a hash of the browser's user agent and a site secret as a session fingerprint. The use of the site secret is rather superfluous but checking the user agent might prevent some session hijacking attempts."
msgstr ""

#: ../../design/security.rst:65
# 465e165efee443edbd03468e9296bd3d
msgid "“Remember me” cookie"
msgstr ""

#: ../../design/security.rst:66
# ca74910077ea4cc28333ec634b0fc74b
msgid "To allow users to stay logged in for a longer period of time regardless of whether the browser has been closed, Elgg uses a cookie (called elggperm) that contains what could be considered a super session identifier. This identifier is stored in a cookies table. When a session is being initiated, Elgg checks for the presence of the elggperm cookie. If it exists and the session code in the cookie matches the code in the cookies table, the corresponding user is automatically logged in."
msgstr ""

#: ../../design/security.rst:69
# 9b7776a07f5e4730a76473ef66765466
msgid "Alternative authentication"
msgstr ""

#: ../../design/security.rst:71
# 4cf8101c055441f3912f30a10ca5f783
msgid "This section is very hand-wavy"
msgstr ""

#: ../../design/security.rst:73
# b6a4cbc195e34778ac551ad5cd4a3cc1
msgid "To replace Elgg's default user authentication system, a plugin would have to replace the default action with its own through ``register_action()``. It would also have to register its own pam handler using ``register_pam_handler()``."
msgstr ""

#: ../../design/security.rst:75
# 41f5554465024a92adfae45e7a7fb42e
msgid "The ``pam_authenticate()`` function used to call the different modules has a bug related to the importance variable."
msgstr ""

#: ../../design/security.rst:79
# ba93186b0fcd439293794ce5da1e6eb0
msgid "HTTPS"
msgstr ""

#: ../../design/security.rst:81
# 96e9f1e6ba774901ab9864b70cc5a765
msgid "You must enable SSL support on your server for any of these techniques to work."
msgstr ""

#: ../../design/security.rst:83
# 4d2e0aecab414a958b1af265b166a48d
msgid "To make the login form submit over https, turn on login-over-ssl from Elgg’s admin panel."
msgstr ""

#: ../../design/security.rst:85
# 92c788aa69944335892275b18821dbcd
msgid "You can also serve your whole site over SSL by simply changing the site URL to include “https” instead of just “http.”"
msgstr ""

#: ../../design/security.rst:88
# c22711f1f4964b808ec0e598088828d1
msgid "XSS"
msgstr ""

#: ../../design/security.rst:90
# 960f8dd64cf6449496ab6a1256b2ac2b
msgid "Filtering is used in Elgg to make XSS attacks more difficult. The purpose of the filtering is to remove Javascript and other dangerous input from users."
msgstr ""

#: ../../design/security.rst:92
# e6c983709c784c2baae1f04a9dfd5a8a
msgid "Filtering is performed through the function ``filter_tags()``. This function takes in a string and returns a filtered string. It triggers a ``validate, input`` plugin hook."
msgstr ""

#: ../../design/security.rst:94
# b4a9bc80b742492899eae4450fef6129
msgid "By default Elgg comes with the htmLawed filtering code as a plugin. Developers can drop in any additional or replacement filtering code as a plugin."
msgstr ""

#: ../../design/security.rst:96
# 655e997db61a49b0bb0a8122cbc5b0a4
msgid "The ``filter_tags()`` function is called on any user input as long as the input is obtained through a call to ``get_input()``. If for some reason a developer did not want to perform the default filtering on some user input, the ``get_input()`` function has a parameter for turning off filtering."
msgstr ""

#: ../../design/security.rst:99
# 6ca5f8145d984859805739d30157ed83
msgid "CSRF / XSRF"
msgstr ""

#: ../../design/security.rst:101
# 05afe1da2db64fd7ab8a2859781ad9c7
msgid "Elgg generates security tokens to prevent `cross-site request forgery`_. These are embedded in all forms and state-modifying AJAX requests as long as the correct API is used. Read more in the :doc:`/guides/actions` developer guide."
msgstr ""

#: ../../design/security.rst:104
# e6c6c7e538864347bd3041a9a01d3c64
msgid "SQL Injection"
msgstr ""

#: ../../design/security.rst:106
# bb0afecfa91342ba8af2f78e0f7bb719
msgid "Elgg’s API sanitizes all input before issuing DB queries. Read more in the :doc:`/design/database` design doc."
msgstr ""

#: ../../design/security.rst:109
# 961b720c70d7455f87c78a113605dac2
msgid "Privacy"
msgstr ""

#: ../../design/security.rst:111
# 321aa015817f4cd4aaa50416df9b70af
msgid "Elgg uses an ACL system to control which users have access to various pieces of content. Read more in the :doc:`/design/database` design doc."
msgstr ""

